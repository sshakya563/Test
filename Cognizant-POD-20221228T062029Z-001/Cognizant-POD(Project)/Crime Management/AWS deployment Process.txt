Deploying Spring Boot to cloud using AWS Elastic BeanStalk


Step 1:Create one AWS account 
Go to,
https://aws.amazon.com

Step 2:click on (Crreate AWS Account)

Step3: Click on Sign in to Console

Step4:There are two types of User
i)Root user(console access+ programitic acees)
ii)IAM-Identity and Access Management

Step4: Go to AWS  Management Console (after login you can able to view this console)

Step 5: click on service and search IAM

step:You will get the new page for IAM called (Welcome to Identity and AccesManagement)
     You can able to create individual user and also group name and in that group you can able to add
      users.
  Create a Group like "Developer"

 

Then
Attach policy to that group as he/she can having access capability like AdminAccess, Billing acces, AWSLambdaServices

Select "AdminAccess" as policy Type.

click on create Group


Step 6: Now Go back to "Welcome to Identity and AccesManagement" page and create user
then add user, Give user id

like "sshakya563"

and select AWS access type

Mainly there are two types of access one is programming access and another one console based access
Programmatic user can able to create new resources and console based user can able to perform the actions

provide both the access to that user by checking both checkboxses


after that ,in place of console password you can select either Autogenerated password or custom password
if custom password provide the password for your user id.

Step 7: then click next---> check the check box for developer that is your group name---> ignore tag (no need to add any tag for now)--->click on create user--->after that you will get success screen with "Success" Message
and you will get one URL on sucess screen 


step 8--> Now you have to login through that URL(which is newly created)  not from https://aws.amazon.com
 

Step 9: Go to agin AWS Management console

Step10---cloud is some thing called on-demand resource provisioning
         Suppose if you want to manage your resources on server then you need plan one month before

AWS is one of leading cloud service provider.It is realiable, secure and cost effective

Step 11: 
after login ,
Go To "AWS Management console"
please select reigon as "US EAST N-virginia"

Step 12: click on services and type Elastic Beanstalk

You will get one welcome page for Elastic Beanstalk like "Welcome to  AWS  Elastic Beanstalk"
    You can also able to check all features of Elastic Beanstalk.

Step 13: click on  (Create new Application) button

  You will get one wizard  which ask you few information about your application like,

   Application Name:
    Description:
  Just give the application name as suppose "project-api-cts" and click on create 

Step 14: Now you have create an environment for application 
         As you know that there are multiple environment are avialable like Dev environment, QA environment, Production environment e.t.c

Now you can create one environment now by clicking "create now"


Step 15: Now you have to choose the environment either Web server environment or worker environment
        But if you want to deploy wep application you can select "Web Server Environement" and for batch of application you can select "Worker Environment"

Choose "Web Server Environment" and click select

Step 16: after click on "select" you will get option to create environment,
Like,

  Application Name: project-api-cts

  Environmemnt: project-api-cts-dev

  Domain name:left empty , Amazon will create the domain for you , or you can provide your custom domain.

  Description: left empty

In Base Configuration section you can select the platform

 Preconfigured Platform
  
   Here you can also able to deploy container then select "Docker"
   
  Now if you want to deploy your application using jar file then option you need to select as "Java"
  and if you want to deploy the war file then option you need to select "Tomcat"


  So you can select "java"
In Application Code section, you have to select "sample application"

  Now click on "create environment"

creating environment will take few minitues


Step 17 : If everything will work fine you will see the success screen like "Health OK"
 and there will be option to upload and deploy 

   If you want to check the status whether creation of environment is pending or created , then select
your application --> in my case I have created "project-api-cts"

You will see all details of your application like,Environment tier, platform, Running version, URL,Health status.
Once health sattus is ok that means it is created or else it is pending.

Now again go back to the success page for this environment.

You can go to the URL and open that url with new tab.
You will get "Congratulation message"

Step 18: Go to services and select the EC2(EC2 stands for Elastic compute cloud. This are the virtual server on which the application can deployed, So EC2 is webservice to append the virtual resources, EC2 support a variety of configuration you can configure memory, CPU utilization ,Network capacity and other thing which is need to sucessfully deploy an application and EC2 instances are charged by the amount of time they are running, EC2 perform varities of action to change the state of EC2 like start, stop, terminate.the instance type is t2.micro(if you will google t2.micro configuration you can seee the detials configuration details of this instance type so t2.micro is part of free tier so first 12 month you can use that instance) If you will click on "running instance" you can see the there is one running instance that is nothing but the environment which we create called "rest-api-cts-dev"  and elastic IPs provide a static IP address for this environment

Step 19: select any rest web service application  from eclipse or STS and create a jar 
      right click on project--->run as-->Maven build--> just give the as package 
    Then spring boot will create the jar file and it will available in target folder


Step 20: login into IAM management console --> click on services-- type for Elastic Beanstalk--> make sure that you are in right reigon like "US north virginia

Step 21: Now you created a sample application called project-api-cts now you can upload our own application by clicking upload and deploy

then --choose file and you have to navigate where the jar file you created
 and the you can give the version label like "first-project-api-jar and then deploy


So it will stop the earlier application and deploy the 


After that you can open a new tab with url and run on browser














  

 


  






 


 




   




